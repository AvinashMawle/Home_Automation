#include "arduino_secrets.h"
/*
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/0fbb83f6-46b4-47b8-ba44-9fed5decd436

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float temperature;
  bool fAN;
  bool light;
  bool mOTION;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"

#include <DHT.h>;
#define LED_PIN 16 
#define FAN_PIN 5
//Constants
#define DHTPIN 13     // what pin we're connected to
#define DHTTYPE DHT22   // DHT 22  (AM2302)
DHT dht(DHTPIN, DHTTYPE); //// Initialize DHT sensor for normal 16mhz Arduino

//Variables
int chk;
float hum;  //Stores humidity value
float temp; //Stores temperature value

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500);

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);

  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
  */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
  dht.begin();
  pinMode(LED_PIN, OUTPUT);
  pinMode(FAN_PIN, OUTPUT);
  digitalWrite(FAN_PIN, LOW);
  digitalWrite(LED_PIN, LOW);
}

void loop() {
  ArduinoCloud.update();
  // Your code here

    //Read data and store it to variables hum and temp
    hum = dht.readHumidity();
    temp= dht.readTemperature();
    //Print temp and humidity values to serial monitor
    Serial.print("Humidity: ");
    Serial.print(hum);
    Serial.print(" %, Temp: ");
    Serial.print(temp);
    Serial.println(" Celsius");
    delay(1000);
    temperature=temp;
}



/*
  Since FAN is READ_WRITE variable, onFANChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onFANChange()  {
  // Add your code here to act upon FAN change
     digitalWrite(FAN_PIN, fAN); 
	   Serial.print("The FAN is "); 
	   if (fAN) { 
	       Serial.println("ON"); 
	   } else { 
	       Serial.println("OFF"); 
	   } 

}

/*
  Since Light is READ_WRITE variable, onLightChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onLightChange()  {
  // Add your code here to act upon Light change
     digitalWrite(LED_PIN, light); 
	   Serial.print("The light is "); 
	   if (light) { 
	       Serial.println("ON"); 
	   } else { 
	       Serial.println("OFF"); 
	   } 
}

/*
  Since MOTION is READ_WRITE variable, onMOTIONChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onMOTIONChange()  {
  // Add your code here to act upon MOTION change
}
